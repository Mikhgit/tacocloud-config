spring:
  data:
    mongodb:
      host: mongo
      port: 27017
      database: tacocloudtest

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8085/auth/realms/taco-realm
      client:
        provider:
          keycloak:
            token-uri: http://keycloak:8085/auth/realms/taco-realm/protocol/openid-connect/token

  cloud:
    config:
      allowOverride: true
      overrideNone: true
      overrideSystemProperties: false

  rabbitmq:
    host: rabbitmq
    port: 5672

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_URI:http://registry-service:8761/eureka/}
  # ensure correct connection local instance to service via feign client inside docker
  # by specify url property as service name.
  # For example: url=http://taco-service
  instance:
    prefer-ip-address: true

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always

taco:
  ingredient-service:
    url: http://ingredient-service
  taco-service:
    url: http://taco-service

server:
  forward-headers-strategy: framework

springdoc:
  swagger-ui:
    oauth:
      clientId: swagger-ui
  oAuthFlow:
    authorizationUrl: http://keycloak:8085/auth/realms/taco-realm/protocol/openid-connect/auth
    tokenUrl: http://keycloak:8085/auth/realms/taco-realm/protocol/openid-connect/token
    use-pkce-with-authorization-code-grant: true
